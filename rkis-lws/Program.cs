using rkis_lws;

var practicalWorkNumber = 0;
var taskNumber = 0;

string[][] tasks =
{
    new[]
    {
        "1. Дано расстояние в метрах, вводимое пользователем. Переведите метры в сантиметры, результат выведите в консоль в формате «Distance in centimeters: <distance>»",
        "2. Известны два расстояния, вводимые пользователем: одно в километрах, другое — в метрах. С помощью условной конструкции выведите наименьшее расстояние",
        "3. Дан массив с числами от 0 до 9. Используя цикл for, выведите в консоль таблицу умножения для числа, вводимого пользователем."
    },
    new[]
    {
        "1. Определите, является ли число a делителем числа b",
        "2. Напишите программу вывода на экран числа, вводимого с клавиатуры. После выводимого числа должно следовать сообщение: «That`s the number you entered<number>»",
        "3. Если число m больше числа n, то выведите на экран «Number m > n», Если число m меньше числа n, то выведите на экран «Number m < n», в противном случае выведите сообщение «The numbers are equal»",
        "4. Дан радиус окружности.Найдите ее диаметр",
        "5. (5-А). Найдите сумму всех целых чисел от 100 до 500",
        "6. (5-Б). Найдите сумму всех целых чисел от a до 500 (значение a вводится с клавиатуры; a < 500)"
    },
    new[]
    {
        "1. Напишите программу, которая запрашивает у пользователя его имя и выводит сообщение в следующем формате «Hello, <username>»",
        "2. Пусть a, b, c – переменные, которым присваиваются введенные числа, а переменная m в конечном итоге должна будет содержать значение наибольшей переменной",
        "3. Пользователь вводит два числа. Одно присваивается одной переменной, а второе — другой. Необходимо поменять значения переменных так, чтобы значение первой оказалось во второй, а второй — в первой",
        "4. Найти номер минимального элемента массива. Например, в массиве [10, -3, -5, 2, 5] номер минимального элемента 2",
        "5. Переведите число, введенное пользователем, в байты или килобайты в зависимости от его выбора. В данном задании вам нужно будет создать функции, для перевода из килобайтов в байты и из байтов в килобайты. Используйте оператор switch для выполнения определенной функции, в зависимости от выбора пользователя"
    },
    new[]
    {
        "1. Найдите сумму и произведение цифр, введенного натурального числа. Например, если введено число 325, то сумма его цифр равна 10 (3+2+5), а произведение 30 (3*2*5)",
        "2. Напишите функцию, которая заполняет массив случайными числами в диапазоне, указанном пользователем. Функция должна принимать два аргумента: начало диапазона и его конец, и возвращать получившийся массив чисел",
        "3. Заполните массив случайными числами в диапазоне от -100 до 100. Напишите функцию, которая подсчитает сколько в массиве положительных, отрицательных и нулевых значений. Выведите на экран элементы массива и посчитанные количества",
        "4. Сгенерируйте двумерный массив заполненный случайными числами (по 10 чисел в столбце). Напишите функцию, сравнивающую стоящие рядом числа, сохраните наибольшие из них в новом массиве",
        "5. Выведите на экран индексы всех минимальных элементов трехмерного массива",
    },
    new[]
    {
        "1. Даны целочисленный массив nums и целочисленная переменная target, верните индексы двух чисел, сумма которых равна target",
        "2. Дано число, верните его в обратно порядке",
        "3. Дано целое число x, верните значение true, если x является палиндромом. Целое число является палиндромом, когда оно читается одинаково как вперед, так и назад. Например, 121-это палиндром, а 123-нет",
        "4. Объедините две отсортированные коллекции. Отсортируйте получившуюся коллекцию. Использовать готовые функции сортировки нельзя",
        "5. Дан отсортированный массив различных целых чисел и какое-то значение target, верните индекс, если target найдено. Если нет, верните индекс, где target могло бы быть, если бы оно было вставлено по порядку",
    },
    new[]
    {
        "1. Выведите на экран названия текущих дня недели и месяца, и свое имя. Каждое слово должно быть в отдельной строке",
        "2. Пользователь вводит три числа. Увеличьте первое число в два раза, второе число уменьшите на 3, третье число возведите в квадрат и затем найдите сумму новых трех чисел",
        "3. Напишите функцию, для нахождения количества квадратов, которые можно вырезать из прямоугольника определенного размера. Например, на функция принимает размеры прямоугольника(два числа) и размер стороны квадрата(одно число), а возвращает число квадратов, которые можно вырезать из прямоугольника",
        "4. Напишите функцию, для нахождения наибольшего из двух чисел. Функция принимает два числа и возвращает наибольшее из них",
        "5. Напишите функцию, для нахождения количества положительных чисел в массиве. Функция принимает массив чисел и возвращает количества положительных чисел в массиве",
        "6. Напишите функцию для нахождения произведения чисел, которые стоят на нечетных местах",
        "7. Напишите функцию, которая принимает 1 число определяет, расположены ли числа в нем по убыванию",
        "8. Сгенерируйте массив(случайной длины, до 25-ти элементов) из чисел расположенных по убыванию, которые делятся на 3 без остатка",
        "9. Определите, содержит ли массив данное число x",
        "10. Создайте массив любой размерности, каждый элемент которого равен квадрату своего номера",
    }
};

Action[][] taskActions =
{
    new[]
    {
        PracticalWork1.Task1,
        PracticalWork1.Task2,
        PracticalWork1.Task3
    },
    new[]
    {
        PracticalWork2.Task1,
        PracticalWork2.Task2,
        PracticalWork2.Task3,
        PracticalWork2.Task4,
        PracticalWork2.Task5,
        PracticalWork2.Task6
    },
    new[]
    {
        PracticalWork3.Task1,
        PracticalWork3.Task2,
        PracticalWork3.Task3,
        PracticalWork3.Task4,
        PracticalWork3.Task5
    },
    new[]
    {
        PracticalWork4.Task1,
        PracticalWork4.Task2,
        PracticalWork4.Task3,
        PracticalWork4.Task4,
        PracticalWork4.Task5
    },
    new[]
    {
        PracticalWork5.Task1,
        PracticalWork5.Task2,
        PracticalWork5.Task3,
        PracticalWork5.Task4,
        PracticalWork5.Task5
    },
    new[]
    {
        PracticalWork6.Task1,
        PracticalWork6.Task2,
        PracticalWork6.Task3,
        PracticalWork6.Task4,
        PracticalWork6.Task5,
        PracticalWork6.Task6,
        PracticalWork6.Task7,
        PracticalWork6.Task8,
        PracticalWork6.Task9,
        PracticalWork6.Task10
    },
};


while (true)
{
    Console.WriteLine("Input the number of the practical work (from 1 to 10): ");
    taskNumber = Helpers.GetIntFromCommandLine(1, 10) - 1;

    Console.WriteLine(Environment.NewLine + "Tasks:");
    Console.WriteLine(string.Join(Environment.NewLine, tasks[taskNumber]));

    Console.WriteLine(Environment.NewLine + "Input the task number:");
    practicalWorkNumber = Helpers.GetIntFromCommandLine(1, tasks[taskNumber].Length) - 1;

    Console.WriteLine(Environment.NewLine + "Selected task:");
    Console.WriteLine(tasks[taskNumber][practicalWorkNumber] + Environment.NewLine);

    try
    {
        taskActions[taskNumber][practicalWorkNumber]();
    }
    catch (Exception e)
    {
        Console.WriteLine("This task does not exist");
    }

    Reset();
    Console.WriteLine(Environment.NewLine);
}


void Reset()
{
    taskNumber = 0;
    practicalWorkNumber = 0;
}
using rkis_lws;

var practicalWorkNumber = 0;
var taskNumber = 0;

string[][] tasks =
{
    // 1
    new[]
    {
        "1. Дано расстояние в метрах, вводимое пользователем. Переведите метры в сантиметры, результат выведите в консоль в формате «Distance in centimeters: <distance>»",
        "2. Известны два расстояния, вводимые пользователем: одно в километрах, другое — в метрах. С помощью условной конструкции выведите наименьшее расстояние",
        "3. Дан массив с числами от 0 до 9. Используя цикл for, выведите в консоль таблицу умножения для числа, вводимого пользователем."
    },
    // 2
    new[]
    {
        "1. Определите, является ли число a делителем числа b",
        "2. Напишите программу вывода на экран числа, вводимого с клавиатуры. После выводимого числа должно следовать сообщение: «That`s the number you entered<number>»",
        "3. Если число m больше числа n, то выведите на экран «Number m > n», Если число m меньше числа n, то выведите на экран «Number m < n», в противном случае выведите сообщение «The numbers are equal»",
        "4. Дан радиус окружности.Найдите ее диаметр",
        "5. (5-А). Найдите сумму всех целых чисел от 100 до 500",
        "6. (5-Б). Найдите сумму всех целых чисел от a до 500 (значение a вводится с клавиатуры; a < 500)"
    },
    // 3
    new[]
    {
        "1. Напишите программу, которая запрашивает у пользователя его имя и выводит сообщение в следующем формате «Hello, <username>»",
        "2. Пусть a, b, c – переменные, которым присваиваются введенные числа, а переменная m в конечном итоге должна будет содержать значение наибольшей переменной",
        "3. Пользователь вводит два числа. Одно присваивается одной переменной, а второе — другой. Необходимо поменять значения переменных так, чтобы значение первой оказалось во второй, а второй — в первой",
        "4. Найти номер минимального элемента массива. Например, в массиве [10, -3, -5, 2, 5] номер минимального элемента 2",
        "5. Переведите число, введенное пользователем, в байты или килобайты в зависимости от его выбора. В данном задании вам нужно будет создать функции, для перевода из килобайтов в байты и из байтов в килобайты. Используйте оператор switch для выполнения определенной функции, в зависимости от выбора пользователя"
    },
    // 4
    new[]
    {
        "1. Найдите сумму и произведение цифр, введенного натурального числа. Например, если введено число 325, то сумма его цифр равна 10 (3+2+5), а произведение 30 (3*2*5)",
        "2. Напишите функцию, которая заполняет массив случайными числами в диапазоне, указанном пользователем. Функция должна принимать два аргумента: начало диапазона и его конец, и возвращать получившийся массив чисел",
        "3. Заполните массив случайными числами в диапазоне от -100 до 100. Напишите функцию, которая подсчитает сколько в массиве положительных, отрицательных и нулевых значений. Выведите на экран элементы массива и посчитанные количества",
        "4. Сгенерируйте двумерный массив заполненный случайными числами (по 10 чисел в столбце). Напишите функцию, сравнивающую стоящие рядом числа, сохраните наибольшие из них в новом массиве",
        "5. Выведите на экран индексы всех минимальных элементов трехмерного массива",
    },
    // 5
    new[]
    {
        "1. Даны целочисленный массив nums и целочисленная переменная target, верните индексы двух чисел, сумма которых равна target",
        "2. Дано число, верните его в обратно порядке",
        "3. Дано целое число x, верните значение true, если x является палиндромом. Целое число является палиндромом, когда оно читается одинаково как вперед, так и назад. Например, 121-это палиндром, а 123-нет",
        "4. Объедините две отсортированные коллекции. Отсортируйте получившуюся коллекцию. Использовать готовые функции сортировки нельзя",
        "5. Дан отсортированный массив различных целых чисел и какое-то значение target, верните индекс, если target найдено. Если нет, верните индекс, где target могло бы быть, если бы оно было вставлено по порядку",
    },
    // 6
    new[]
    {
        "1. Выведите на экран названия текущих дня недели и месяца, и свое имя. Каждое слово должно быть в отдельной строке",
        "2. Пользователь вводит три числа. Увеличьте первое число в два раза, второе число уменьшите на 3, третье число возведите в квадрат и затем найдите сумму новых трех чисел",
        "3. Напишите функцию, для нахождения количества квадратов, которые можно вырезать из прямоугольника определенного размера. Например, на функция принимает размеры прямоугольника(два числа) и размер стороны квадрата(одно число), а возвращает число квадратов, которые можно вырезать из прямоугольника",
        "4. Напишите функцию, для нахождения наибольшего из двух чисел. Функция принимает два числа и возвращает наибольшее из них",
        "5. Напишите функцию, для нахождения количества положительных чисел в массиве. Функция принимает массив чисел и возвращает количества положительных чисел в массиве",
        "6. Напишите функцию для нахождения произведения чисел, которые стоят на нечетных местах",
        "7. Напишите функцию, которая принимает 1 число определяет, расположены ли числа в нем по убыванию",
        "8. Сгенерируйте массив(случайной длины, до 25-ти элементов) из чисел расположенных по убыванию, которые делятся на 3 без остатка",
        "9. Определите, содержит ли массив данное число x",
        "10. Создайте массив любой размерности, каждый элемент которого равен квадрату своего номера",
    },
    // 7
    new[]
    {
    "1. Напишите функцию для нахождения суммы чисел, которые стоят на четных местах массива",
    "2. Напишите функцию, которая принимает дату из двух чисел (день и месяц, год берем текущий) и возвращает «Yes», если такая дата существует, иначе «No»",
    "3. Напишите функцию, которая принимает число. Если оно от 2 до 5 включительно, то увеличьте его на 10. Если оно от 7 до 40, то уменьшите на 100. Если оно не более 0 или более 3000, то увеличьте его в 3 раза (то есть умножьте на 3). Иначе занулите это число. Функция должна вернуть получившееся число",
    "4. Пользователь вводит курс доллара в рублях. Выведите таблицу цен 1$, 2$, ..., 100$ в рублях, третьим столбцом добавьте количество кг конфет, которое можно купить на данные суммы, если цена 1 кг конфет равна 20 руб. Пример: 1$ - 70 р - 3.5 кг и так далее",
    "5. Пользователь вводит ненулевые целые числа до тех пор, пока не введет ноль. Найдите количество четных чисел, которые он ввел",
    "6. В массиве чисел найдите минимальное число и количество его повторений",
    "7. Напишите функцию перестановки элементов массива в обратном порядке",
    "8. Дана матрица. Напишите функцию для вывода первого и последнего столбцов матрицы, а также первой и последней строк",
    "9. Дана целочисленная матрица размера 5 x 5. Переставьте местами 4 и 5 строку",
    "10. Напишите функцию перестановки строк матрицы случайным образом"
    },
    // 8
    new[]
    {
        "1. Напишите функцию поиска в матрице четных дробных чисел",
        "2. Пользователь вводит номер телефона согласно шаблону (+x (xxx) xxx-xx-), проверьте, соответствует ли номер, представленному шаблону, если да, написать «Everything all right», если нет «Oh my god»",
        "3. Совершенное число - это положительное целое число, равное сумме его положительных делителей, исключая само число. Делитель целого числа x - это целое число, которое может разделить x без остатка.Учитывая целое число number, верните значение true, если number является совершенным числом, в противном случае верните значение false",
        "4. Дан текстовый файл с числами, написанными через пробел в несколько строк. Найдите наибольшее из чисел",
        "5. Вам даны два непустых массива, представляющих два неотрицательных целых числа. Числа хранятся в обратном порядке, верните их сумму в виде массива. Эти два числа не содержат никакого начального нуля, кроме самого числа 0"
    },
    // 9
    new[]
    {
        "1. Создайте массив размерностью 15. С помощью цикла for заполните массив случайными числами. Выведите элементы массива используя цикл foreach",
        "2. Создайте массив размерностью 15. Первые 14 элементов пользователь вводит через консоль. В качестве последнего элемента записывается сумма всех элементов. Выведите элементы массива используя цикл foreach",
        "3. Напишите enum для математических операций (+, -, *, /). Создайте функцию, которая будет принимать 2 числа и операцию. Внутри функции создайте switch, который будет содержать case для каждой операции. Функция должна возвращать 4 значения (firstNumber, secondNumber, operation, result)",
        "4. Используя enum для дней недели и месяцев, напишите функцию, которая будет преобразовывать введенную пользователем дату (за текущий год) к следующему виду; Input: 01.09.2021 Output: Среда, 1 Сентября, 2021 год",
        "5. С помощью конструкции try catch, обработайте участки кода в которых могут возникнуть исключения"
    },
    // 10
    new[]
    {
        "1. Посчитайте сумму целых чисел, расположенных между числами 1 и N включительно",
        "2. Петя успевает по математике лучше всех в классе, поэтому учитель задал ему сложное домашнее задание, в котором нужно в заданном наборе целых чисел найти сумму всех положительных элементов, затем найти где в заданной последовательности находятся максимальный и минимальный элемент и вычислить произведение чисел, расположенных в этой последовательности между ними. Так же известно, что минимальный и максимальный элемент встречаются в заданном множестве чисел только один раз и не являются соседними. Напишите функцию, которая примет массив и вернет два числа (сумму положительных элементов и произведение чисел, расположенных между минимальным и максимальным элементами)",
        "3. Сформируйте возрастающий массив из случайных четных чисел",
        "4. Дана строка. Если она начинается на «abc», то замените их на «www», иначе добавьте в конец строки «zzz»",
        "5. Напишите функцию для вычисления значения выражения (a+4b)(a−3b)+a^2",
        "6. Дан массив, содержащий положительные и отрицательные числа. Замените все элементы массива на противоположные по знаку. Например, задан массив [1, -5, 0, 3, -4], после преобразования должно получиться [-1, 5, 0, -3, 4]",
        "7. Даны координаты точки и радиус круга с центром в начале координат. Определите, принадлежит ли данная точка кругу"
    }



};

Action[][] taskActions =
{
    // 1
    new[]
    {
        PracticalWork1.Task1,
        PracticalWork1.Task2,
        PracticalWork1.Task3
    },
    // 2
    new[]
    {
        PracticalWork2.Task1,
        PracticalWork2.Task2,
        PracticalWork2.Task3,
        PracticalWork2.Task4,
        PracticalWork2.Task5,
        PracticalWork2.Task6
    },
    // 3
    new[]
    {
        PracticalWork3.Task1,
        PracticalWork3.Task2,
        PracticalWork3.Task3,
        PracticalWork3.Task4,
        PracticalWork3.Task5
    },
    // 4
    new[]
    {
        PracticalWork4.Task1,
        PracticalWork4.Task2,
        PracticalWork4.Task3,
        PracticalWork4.Task4,
        PracticalWork4.Task5
    },
    // 5
    new[]
    {
        PracticalWork5.Task1,
        PracticalWork5.Task2,
        PracticalWork5.Task3,
        PracticalWork5.Task4,
        PracticalWork5.Task5
    },
    // 6
    new[]
    {
        PracticalWork6.Task1,
        PracticalWork6.Task2,
        PracticalWork6.Task3,
        PracticalWork6.Task4,
        PracticalWork6.Task5,
        PracticalWork6.Task6,
        PracticalWork6.Task7,
        PracticalWork6.Task8,
        PracticalWork6.Task9,
        PracticalWork6.Task10
    },
    // 7
    new[]
    {
        PracticalWork7.Task1,
        PracticalWork7.Task2,
        PracticalWork7.Task3,
        PracticalWork7.Task4,
        PracticalWork7.Task5,
        PracticalWork7.Task6,
        PracticalWork7.Task7,
        PracticalWork7.Task8,
        PracticalWork7.Task9,
        PracticalWork7.Task10
    },
    // 8
    new[]
    {
        PracticalWork8.Task1,
        PracticalWork8.Task2,
        PracticalWork8.Task3,
        PracticalWork8.Task4,
        PracticalWork8.Task5,
    },
    // 9
    new[]
    {
        PracticalWork9.Task1,
        PracticalWork9.Task2,
        PracticalWork9.Task3,
        PracticalWork9.Task4,
        PracticalWork9.Task5,
    },
    // 10
    new[]
    {
        PracticalWork10.Task1,
        PracticalWork10.Task2,
        PracticalWork10.Task3,
        PracticalWork10.Task4,
        PracticalWork10.Task5,
        PracticalWork10.Task6,
        PracticalWork10.Task7,
    },
};


while (true)
{
    Console.WriteLine("-----------------------------------------------------");
    Console.WriteLine("Input the number of the practical work (from 1 to 10): ");
    taskNumber = Helpers.GetIntFromCommandLine(1, 10) - 1;

    Console.WriteLine(Environment.NewLine + "Tasks:");
    Console.WriteLine(string.Join(Environment.NewLine, tasks[taskNumber]));

    Console.WriteLine(Environment.NewLine + "Input the task number:");
    practicalWorkNumber = Helpers.GetIntFromCommandLine(1, tasks[taskNumber].Length) - 1;

    Console.WriteLine(Environment.NewLine + "Selected task:");
    Console.WriteLine(tasks[taskNumber][practicalWorkNumber] + Environment.NewLine);

    try
    {
        taskActions[taskNumber][practicalWorkNumber]();
    }
    catch (Exception _)
    {
        Console.WriteLine("Error. Maybe this task does not exist");
    }

    Reset();
    Console.WriteLine(Environment.NewLine);
}


void Reset()
{
    taskNumber = 0;
    practicalWorkNumber = 0;
}